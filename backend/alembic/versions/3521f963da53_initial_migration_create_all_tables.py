"""Initial migration - create all tables

Revision ID: 3521f963da53
Revises: 
Create Date: 2025-09-13 19:23:28.657957

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3521f963da53'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('market_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('change', sa.Float(), nullable=True),
    sa.Column('change_percent', sa.Float(), nullable=True),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('market_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_market_data'))
    )
    op.create_index('ix_market_data_symbol_date', 'market_data', ['symbol', 'date'], unique=False)
    op.create_table('model_performance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('model_type', sa.String(length=50), nullable=False),
    sa.Column('model_version', sa.String(length=20), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=True),
    sa.Column('evaluation_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('precision', sa.Float(), nullable=True),
    sa.Column('recall', sa.Float(), nullable=True),
    sa.Column('f1_score', sa.Float(), nullable=True),
    sa.Column('mae', sa.Float(), nullable=True),
    sa.Column('rmse', sa.Float(), nullable=True),
    sa.Column('directional_accuracy', sa.Float(), nullable=True),
    sa.Column('performance_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_model_performance'))
    )
    op.create_index('ix_model_performance_date', 'model_performance', ['evaluation_date'], unique=False)
    op.create_index('ix_model_performance_model', 'model_performance', ['model_type', 'model_version'], unique=False)
    op.create_table('sentiment_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('article_count', sa.Integer(), nullable=True),
    sa.Column('headline', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('sentiment_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sentiment_data'))
    )
    op.create_index('ix_sentiment_data_source', 'sentiment_data', ['source'], unique=False)
    op.create_index('ix_sentiment_data_symbol_date', 'sentiment_data', ['symbol', 'date'], unique=False)
    op.create_table('stocks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('market_cap', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('exchange', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stocks'))
    )
    op.create_index('ix_stocks_sector', 'stocks', ['sector'], unique=False)
    op.create_index(op.f('ix_stocks_symbol'), 'stocks', ['symbol'], unique=True)
    op.create_index('ix_stocks_symbol_active', 'stocks', ['symbol', 'is_active'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index('ix_users_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('alerts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('condition', sa.String(length=20), nullable=False),
    sa.Column('threshold_value', sa.Float(), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_triggered', sa.Boolean(), nullable=True),
    sa.Column('triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_alerts_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alerts'))
    )
    op.create_index('ix_alerts_symbol_active', 'alerts', ['symbol', 'is_active'], unique=False)
    op.create_index('ix_alerts_user_active', 'alerts', ['user_id', 'is_active'], unique=False)
    op.create_table('portfolios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.Column('cash_balance', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_portfolios_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_portfolios'))
    )
    op.create_table('predictions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stock_id', sa.UUID(), nullable=False),
    sa.Column('prediction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('target_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('predicted_price', sa.Float(), nullable=False),
    sa.Column('confidence_interval_lower', sa.Float(), nullable=True),
    sa.Column('confidence_interval_upper', sa.Float(), nullable=True),
    sa.Column('model_type', sa.String(length=50), nullable=False),
    sa.Column('model_version', sa.String(length=20), nullable=False),
    sa.Column('accuracy_score', sa.Float(), nullable=True),
    sa.Column('prediction_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name=op.f('fk_predictions_stock_id_stocks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_predictions'))
    )
    op.create_index('ix_predictions_model', 'predictions', ['model_type', 'model_version'], unique=False)
    op.create_index('ix_predictions_stock_target', 'predictions', ['stock_id', 'target_date'], unique=False)
    op.create_table('price_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stock_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('open_price', sa.Float(), nullable=False),
    sa.Column('high_price', sa.Float(), nullable=False),
    sa.Column('low_price', sa.Float(), nullable=False),
    sa.Column('close_price', sa.Float(), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.Column('adjusted_close', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name=op.f('fk_price_history_stock_id_stocks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_price_history'))
    )
    op.create_index('ix_price_history_date', 'price_history', ['date'], unique=False)
    op.create_index('ix_price_history_stock_date', 'price_history', ['stock_id', 'date'], unique=False)
    op.create_table('technical_indicators',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stock_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('indicator_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('indicator_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name=op.f('fk_technical_indicators_stock_id_stocks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_technical_indicators'))
    )
    op.create_index('ix_technical_indicators_stock_date', 'technical_indicators', ['stock_id', 'date'], unique=False)
    op.create_index('ix_technical_indicators_type', 'technical_indicators', ['indicator_type'], unique=False)
    op.create_table('portfolio_holdings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('portfolio_id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('average_cost', sa.Float(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name=op.f('fk_portfolio_holdings_portfolio_id_portfolios')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_portfolio_holdings'))
    )
    op.create_index('ix_portfolio_holdings_portfolio_symbol', 'portfolio_holdings', ['portfolio_id', 'symbol'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_portfolio_holdings_portfolio_symbol', table_name='portfolio_holdings')
    op.drop_table('portfolio_holdings')
    op.drop_index('ix_technical_indicators_type', table_name='technical_indicators')
    op.drop_index('ix_technical_indicators_stock_date', table_name='technical_indicators')
    op.drop_table('technical_indicators')
    op.drop_index('ix_price_history_stock_date', table_name='price_history')
    op.drop_index('ix_price_history_date', table_name='price_history')
    op.drop_table('price_history')
    op.drop_index('ix_predictions_stock_target', table_name='predictions')
    op.drop_index('ix_predictions_model', table_name='predictions')
    op.drop_table('predictions')
    op.drop_table('portfolios')
    op.drop_index('ix_alerts_user_active', table_name='alerts')
    op.drop_index('ix_alerts_symbol_active', table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index('ix_users_email_active', table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index('ix_stocks_symbol_active', table_name='stocks')
    op.drop_index(op.f('ix_stocks_symbol'), table_name='stocks')
    op.drop_index('ix_stocks_sector', table_name='stocks')
    op.drop_table('stocks')
    op.drop_index('ix_sentiment_data_symbol_date', table_name='sentiment_data')
    op.drop_index('ix_sentiment_data_source', table_name='sentiment_data')
    op.drop_table('sentiment_data')
    op.drop_index('ix_model_performance_model', table_name='model_performance')
    op.drop_index('ix_model_performance_date', table_name='model_performance')
    op.drop_table('model_performance')
    op.drop_index('ix_market_data_symbol_date', table_name='market_data')
    op.drop_table('market_data')
    # ### end Alembic commands ###
